// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// model Customers {
//   id        String   @id @default(uuid())
//   name      String
//   email     String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   orders    Orders[] // One customer can have multiple orders
// }

// model Products {
//   id     String   @id @default(uuid())
//   name   String
//   price  Float
//   // An order can have multiple products
//   orders Orders[]
// }

// model Orders {
//   id         String     @id @default(uuid())
//   createdAt  DateTime   @default(now())
//   updatedAt  DateTime   @updatedAt
//   customer   Customers  @relation(fields: [customerId], references: [id]) // An order belongs to a single customer
//   customerId String
//   products   Products[] // An order can have multiple products
// }

//ONE TO ONE RELATIONSHIP

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile?
  order     Order[]
}

model Profile {
  id     String @id @default(uuid())
  name   String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Order {
  id      String    @id @default(uuid())
  product Product[]

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(uuid())

  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Product Product[]
}

model Product {
  id String @id @default(uuid())

  name       String
  price      Float
  order      Order[]
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
